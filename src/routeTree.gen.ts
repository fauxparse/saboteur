/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as DeskAuthenticatedImport } from './routes/desk/_authenticated'
import { Route as AgentMissionsImport } from './routes/agent/_missions'
import { Route as AgentMissionsIndexImport } from './routes/agent/_missions.index'
import { Route as DeskAuthenticatedMissionIdImport } from './routes/desk/_authenticated/$missionId'
import { Route as AgentMissionsMissionIdImport } from './routes/agent/_missions.$missionId'
import { Route as AgentMissionsMissionIdIdentifiedImport } from './routes/agent/_missions.$missionId/_identified'
import { Route as AgentMissionsMissionIdIdentifiedIndexImport } from './routes/agent/_missions.$missionId/_identified.index'

// Create Virtual Routes

const DeskImport = createFileRoute('/desk')()
const AgentImport = createFileRoute('/agent')()
const DeskAuthenticatedIndexLazyImport = createFileRoute(
  '/desk/_authenticated/',
)()

// Create/Update Routes

const DeskRoute = DeskImport.update({
  path: '/desk',
  getParentRoute: () => rootRoute,
} as any)

const AgentRoute = AgentImport.update({
  path: '/agent',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DeskAuthenticatedRoute = DeskAuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => DeskRoute,
} as any).lazy(() =>
  import('./routes/desk/_authenticated.lazy').then((d) => d.Route),
)

const AgentMissionsRoute = AgentMissionsImport.update({
  id: '/_missions',
  getParentRoute: () => AgentRoute,
} as any).lazy(() =>
  import('./routes/agent/_missions.lazy').then((d) => d.Route),
)

const DeskAuthenticatedIndexLazyRoute = DeskAuthenticatedIndexLazyImport.update(
  {
    path: '/',
    getParentRoute: () => DeskAuthenticatedRoute,
  } as any,
).lazy(() =>
  import('./routes/desk/_authenticated/index.lazy').then((d) => d.Route),
)

const AgentMissionsIndexRoute = AgentMissionsIndexImport.update({
  path: '/',
  getParentRoute: () => AgentMissionsRoute,
} as any)

const DeskAuthenticatedMissionIdRoute = DeskAuthenticatedMissionIdImport.update(
  {
    path: '/$missionId',
    getParentRoute: () => DeskAuthenticatedRoute,
  } as any,
)

const AgentMissionsMissionIdRoute = AgentMissionsMissionIdImport.update({
  path: '/$missionId',
  getParentRoute: () => AgentMissionsRoute,
} as any)

const AgentMissionsMissionIdIdentifiedRoute =
  AgentMissionsMissionIdIdentifiedImport.update({
    id: '/_identified',
    getParentRoute: () => AgentMissionsMissionIdRoute,
  } as any)

const AgentMissionsMissionIdIdentifiedIndexRoute =
  AgentMissionsMissionIdIdentifiedIndexImport.update({
    path: '/',
    getParentRoute: () => AgentMissionsMissionIdIdentifiedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/agent': {
      preLoaderRoute: typeof AgentImport
      parentRoute: typeof rootRoute
    }
    '/agent/_missions': {
      preLoaderRoute: typeof AgentMissionsImport
      parentRoute: typeof AgentRoute
    }
    '/desk': {
      preLoaderRoute: typeof DeskImport
      parentRoute: typeof rootRoute
    }
    '/desk/_authenticated': {
      preLoaderRoute: typeof DeskAuthenticatedImport
      parentRoute: typeof DeskRoute
    }
    '/_public/': {
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof rootRoute
    }
    '/agent/_missions/$missionId': {
      preLoaderRoute: typeof AgentMissionsMissionIdImport
      parentRoute: typeof AgentMissionsImport
    }
    '/desk/_authenticated/$missionId': {
      preLoaderRoute: typeof DeskAuthenticatedMissionIdImport
      parentRoute: typeof DeskAuthenticatedImport
    }
    '/agent/_missions/': {
      preLoaderRoute: typeof AgentMissionsIndexImport
      parentRoute: typeof AgentMissionsImport
    }
    '/desk/_authenticated/': {
      preLoaderRoute: typeof DeskAuthenticatedIndexLazyImport
      parentRoute: typeof DeskAuthenticatedImport
    }
    '/agent/_missions/$missionId/_identified': {
      preLoaderRoute: typeof AgentMissionsMissionIdIdentifiedImport
      parentRoute: typeof AgentMissionsMissionIdImport
    }
    '/agent/_missions/$missionId/_identified/': {
      preLoaderRoute: typeof AgentMissionsMissionIdIdentifiedIndexImport
      parentRoute: typeof AgentMissionsMissionIdIdentifiedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AgentRoute.addChildren([
    AgentMissionsRoute.addChildren([
      AgentMissionsMissionIdRoute.addChildren([
        AgentMissionsMissionIdIdentifiedRoute.addChildren([
          AgentMissionsMissionIdIdentifiedIndexRoute,
        ]),
      ]),
      AgentMissionsIndexRoute,
    ]),
  ]),
  DeskRoute.addChildren([
    DeskAuthenticatedRoute.addChildren([
      DeskAuthenticatedMissionIdRoute,
      DeskAuthenticatedIndexLazyRoute,
    ]),
  ]),
  PublicIndexRoute,
])

/* prettier-ignore-end */
